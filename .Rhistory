blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
library(blogdown)
??theme
install_theme("beautifulhugo")
install_theme("https://github.com/halogenica/beautifulhugo")
install_theme("halogenica/beautifulhugo")
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
library(blogdown)
build_site()
serve_site()
?system
system("deploy.sh")
system("bash deploy.sh")
build_site()
system("bash deploy.sh")
build_site()
serve_site()
build_site()
serve_site()
system("bash deploy.sh")
build_site()
serve_site()
system("bash deploy.sh")
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
system("bash deploy.sh")
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
library(blogdown)
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
library(blogdown)
build_site()
serve_site()
system("bash deploy.sh")
build_site()
serve_site()
system("bash deploy.sh")
library(blogdown)
serve_site()
system("bash deploy.sh")
library(blogdown)
build_site()
serve_site()
system("bash deploy.sh")
library(blogdown)
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
system("bash deploy.sh")
library(blogdown)
serve_site()
blog_title <- "Importing multiple data files"
tags <- c("R", "eye tracking")
new_post(blog_title, tags = tags, subdir = "posts")
serve_site()
build_site()
serve_site()
for (number in numbers) {
print(number)
}
numbers <- 1:10
for (number in numbers) {
print(number)
}
s <- 500
1000 %% 10000
1000 %% 1000
1000 %% 999
2000 %% 1000
3000 %% 1000
4000 %% 1000
4001 %% 1000
4002 %% 1000
library(blogdown)
serve_site()
system("bash deploy.sh")
setwd("~/Dropbox/Website/willemsleegers.github.io/static/data/")
serve_site()
?lapply
library(tidyverse)
library(purrr)
list.files()
setwd("~/Dropbox/Website/willemsleegers.github.io/static/data/")
?map()
list.files()
setwd("~/Dropbox/Website/willemsleegers.github.io/static/data/")
list.files()
data <- data_frame()
list.files() %>%
map(print(.x))
list.files() %>%
map(print(x))
list.files() %>%
map(print(.))
setwd("~/Dropbox/Website/willemsleegers.github.io/static/data/")
list.files() %>%
map(print(.))
setwd("~/Dropbox/Website/willemsleegers.github.io/static/data/")
list.files()
list.files() %>%
map_chr()
list.files() %>%
map_chr(.f = print())
list.files() %>%
map_chr(.f = print(.))
list.files()
list.files() %>%
map_chr(.f = print(x))
list.files() %>%
map()
list.files() %>%
map(.f = print(.))
list.files() %>%
map(.f = read_tsv(.)
list.files() %>%
map(.f = read_tsv(.))
map(list.files(), read_tsv)
data <- map(list.files(), read_tsv)
setwd("~/Dropbox/Website/willemsleegers.github.io/static/data/")
data <- safely(map(list.files(), read_tsv))
data <- map_df(list.files(), read_tsv)
library(tidyverse)
library(purrr)
data <- map_df(list.files(), read_tsv)
list.files(full.names = T)
list.files()
list.files() %>%
map_df(read_tsv)
setwd("~/Dropbox/Website/willemsleegers.github.io/static/data/")
library(tidyverse)
library(purrr)
list.files() %>%
map_df(read_tsv)
list.files() %>%
map_df(read_tsv)
list.files() %>%
map_df(read_tsv) -> data
View(data)
data <- map_df(list.files(), read_tsv)
data <- data_frame()
for (file in list.files) {
data <- bind_rows(data, read_tsv(file))
}
for (file in list.files()) {
data <- bind_rows(data, read_tsv(file))
}
list.files() %>%
map_df(read_tsv) -> data
library(blogdown)
serve_site()
library(blogdown)
serve_site()
# Load packages
library(blogdown)
# Inspect website ----------------------------------------------------------
# Build website
build_site()
# Serve website
serve_site()
build_site()
system("bash deploy.sh")
system("bash deploy.sh")
system("bash deploy.sh")
library(blogdown)
build_site()
serve_site()
system("bash deploy.sh")
system("bash deploy.sh")
system("bash deploy.sh")
build_site()
system("bash deploy.sh")
# Information -------------------------------------------------------------
# Author: Willem Sleegers
# Date: June 3rd, 2017
# Description: Script to prepare the pilot data of our study in which we investigated the pupillary response to normal and anomalous playing cards.
# Setup -------------------------------------------------------------------
# Load packages
library(tidyverse)
# Set the working directory to a directory containing the first set of files
setwd("~/surfdrive/Data/D1 reverse colored cards pilot study/Data/Eye tracker files/")
list.files()
# Prepare data ------------------------------------------------------------
# Read in all data files
list.files() %>%
map_df(read_tsv, col_types = cols(.default = col_character())) -> data
# Temporary backup
backup <- data
warnings()
as.numeric(data$PupilLeft)
data <- read_tsv("March 2013 Playing Cards_Cards3_Rec 26-3.tsv")
guess_parser(data)
col_guess(data)
spec(data)
cols <- spec(data)
list.files() %>%
map_df(read_tsv, col_types = cols)) -> data
list.files() %>%
map_df(read_tsv, col_types = cols) -> data
View(data)
glimpse(data)
library(stringr)
data <- select(data, StudioTestName, ParticipantName, MediaName, RecordingTimestamp, LocalTimeStamp, EyeTrackerTimestamp, StudioEventIndex, StudioEvent, StudioEventData, FixationIndex, GazeEventType, GazeEventDuration, PupilLeft, PupilRight, ValidityLeft, ValidityRight)
library(blogdown)
# Serve website
serve_site()
build_site()
# Serve website
serve_site()
blog_title <- "Creating a trial-based time variable"
tags <- c("R", "eye tracking")
new_post(blog_title, tags = tags, subdir = "posts")
library(blogdown)
serve_site()
library(blogdown)
build_site()
serve_site()
options(servr.daemon = TRUE)
data <- read_tsv("../../static/data/trial-based-time-variable-data.iqdat")
library(tidyverse)
library(knitr)
library(tidyverse)
library(knitr)
data <- read_tsv("../../static/data/trial-based-time-variable-data.iqdat")
View(data)
data$pupil <- rowMeans(select(data, leftpupilwidth, rightpupilwidth))
View(data)
round(1.5432323)
round(1.5432323, 5)
round(15432323, 5)
round(15432323/1000)
data$timestamp <- round(data$timestamp/1000)
View(data)
data$timestamp <- round(data$timestamp/1000)
View(data)
data <- read_tsv("../../static/data/trial-based-time-variable-data.iqdat")
data$pupil <- rowMeans(select(data, leftpupilwidth, rightpupilwidth))
View(data)
data <- rename(data, subject = subjectid)
View(data)
options(scipen = 9999)
View(data)
data$timestamp2 <- 1494839922000000 - data$timestamp
View(data)
data$timestamp2 <- data$timestamp - 1494839922000000
View(data)
data <- filter(data, marker != 0)
View(data)
data$timestamp <- data$timestamp - 1494839922000000
data <- select(data, subject, timestamp, marker, pupil)
data
data <- rename(data, trial = marker)
data$trial <- data$trial - 100
View(data)
data <- data[1:100, ]
View(data)
seq(from = 1, to = 20, by = 5)
rep(1, 5)
rep(1:20, 5)
rep(1:20, times = 5)
rep(1:20, each = 5)
data$trial <- rep(1:20, each = 5)
View(data)
write_tsv(data, "../../static/data/trial-based-time-variable-data.tsv")
write_tsv(data, "~/Desktop/trial-based-time-variable-data.tsv")
serve_site()
# Set knitr options
knitr::opts_chunk$set(echo = TRUE)
# Packages
library(tidyverse)
library(knitr)
# Read data
data <- read_tsv("../../static/data/trial-based-time-variable-data.tsv")
# Print data
kable(head(data, 15))
serve_site()
library(knitr)
build_site()
serve_site()
install.packages("pander")
serve_site()
install.packages("knitrExtra")
install.packages("kableExtra")
serve_site()
data <- read_tsv("../../static/data/trial-based-time-variable-data.tsv")
data$trial <- data$trial - 1
data <- filter(data, trial < 21)
View(data)
data <- read_tsv("../../static/data/trial-based-time-variable-data.tsv")
data$trial <- data$trial - 1
data <- filter(data, trial < 21)
data <- filter(data, trial !- 0)
data <- filter(data, trial != 0)
data <- filter(data, trial < 11)
write_tsv(data, "~/Desktop/trial-based-time-variable-data.tsv")
serve_site()
View(data)
data <- read_tsv("../../static/data/trial-based-time-variable-data.tsv")
View(data)
build_site()
system("bash deploy.sh")
build_site()
serve_site()
system("bash deploy.sh")
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
list.files()
install.packages(c("blogdown", "bookdown", "httr", "Matrix", "RefManageR", "RMySQL", "servr", "tibble", "tidyr"))
install.packages(c("blogdown", "bookdown", "httr", "Matrix", "RefManageR", "RMySQL", "servr", "tibble", "tidyr"))
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
library(blogdown)
options(servr.daemon = TRUE)
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
system("bash deploy.sh")
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
library(blogdown)
options(servr.daemon = TRUE)
serve_site()
system("bash deploy.sh")
library(blogdown)
options(servr.daemon = TRUE)
install.packages(c("backports", "bayesplot", "checkmate", "colourpicker", "crayon", "curl", "data.table", "effects", "ggeffects", "lme4", "mgcv", "PKI", "sjlabelled", "sjstats", "tidyselect", "tidytext"))
install.packages(c("backports", "bayesplot", "checkmate", "colourpicker", "crayon", "curl", "data.table", "effects", "ggeffects", "lme4", "mgcv", "PKI", "sjlabelled", "sjstats", "tidyselect", "tidytext"))
# Load packages
library(blogdown)
# Set options
options(servr.daemon = TRUE)
# Serve website
serve_site()
system("bash deploy.sh")
blog_title <- "Introducing tidystats"
tags <- c("R", "tidystats", "statistics")
new_post(blog_title, tags = tags, subdir = "posts")
library(blogdown)
options(servr.daemon = TRUE)
serve_site()
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
?lm
length(c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14))
rep("control", times = 10)
rep(c("control", "treatment"), times = 10)
rep(c("control", "treatment"), each = 10)
library(blogdown)
options(servr.daemon = TRUE)
serve_site()
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
system("bash deploy.sh")
# Load packages
library(blogdown)
# Set options
options(servr.daemon = TRUE)
# Serve website
serve_site()
blog_title <- "My LaTeX dissertation template"
tags <- c("LaTeX", "dissertation")
new_post(blog_title, tags = tags, subdir = "posts")
system("bash deploy.sh")
system("bash deploy.sh")
# Load packages
library(blogdown)
# Serve website
serve_site()
system("bash deploy.sh")
# Load packages
library(blogdown)
# Set options
options(servr.daemon = TRUE)
# Serve website
serve_site()
system("bash deploy.sh")
library(blogdown)
options(servr.daemon = TRUE)
build_site()
serve_site()
build_site()
library(blogdown)
serve_site()
build_site()
serve_site()
system("bash deploy.sh")
# Load packages
library(blogdown)
# Set options
options(servr.daemon = TRUE)
# Serve website
serve_site()
# Build website
build_site()
system("bash deploy.sh")
# Load packages
library(blogdown)
system("bash deploy.sh")
# Serve website
serve_site()
system("bash deploy.sh")
# Load packages
library(blogdown)
# Set options
options(servr.daemon = TRUE)
# Serve website
serve_site()
system("bash deploy.sh")
# Serve website
serve_site()
# Serve website
serve_site()
# Load packages
library(blogdown)
# Set options
options(servr.daemon = TRUE)
# Serve website
serve_site()
# Serve website
serve_site()
# Serve website
serve_site()
system("bash deploy.sh")
# Serve website
serve_site()
system("bash deploy.sh")
# Load packages
library(blogdown)
# Set options
options(servr.daemon = TRUE)
# Serve website
serve_site()
# Build website
build_site()
# Serve website
serve_site()
hugo_version()
# Serve website
serve_site()
# Load packages
library(blogdown)
# Serve website
serve_site()
# Load packages
library(blogdown)
