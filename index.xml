<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>

    <title>@willemsleegers’s website - website</title>
    <link>/</link>
    <description>All entries in website on website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    <lastBuildDate>Tue, 06 Mar 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
      
      <item>
        <title>Colloquium talk: tidystats</title>
        <link>/talks/colloquium_mto_06_03_2018/</link>
        <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
        <author> (Willem Sleegers)</author>
        <guid>/talks/colloquium_mto_06_03_2018/</guid>
        <description>&lt;div id=&#34;colloquium-talk-tidystats&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Colloquium talk: tidystats&lt;/h1&gt;
&lt;p&gt;On March 6th, 2018, I gave a colloquium talk at the methodology department of Tilburg University. You can view the slides here:&lt;/p&gt;
&lt;div id=&#34;view-slides&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a href=&#34;colloquium_mto_06_03_2018.html&#34;&gt;View slides&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Lab meeting talk: tidystats</title>
        <link>/talks/labmeeting_26_01_2018/</link>
        <pubDate>Fri, 26 Jan 2018 00:00:00 +0000</pubDate>
        <author> (Willem Sleegers)</author>
        <guid>/talks/labmeeting_26_01_2018/</guid>
        <description>&lt;div id=&#34;lab-meeting-talk-tidystats&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Lab meeting talk: tidystats&lt;/h1&gt;
&lt;p&gt;On January 26th, 2018, I gave a lab meeting presentation on my R package called tidystats. You can see the slides here:&lt;/p&gt;
&lt;div id=&#34;view-slides&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a href=&#34;labmeeting_26_01_2018.html&#34;&gt;View slides&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
      </item>
      
    
      
      <item>
        <title>My LaTeX dissertation template</title>
        <link>/posts/my-latex-dissertation-template/</link>
        <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
        <author> (Willem Sleegers)</author>
        <guid>/posts/my-latex-dissertation-template/</guid>
        <description>&lt;p&gt;I wrote my PhD dissertation in LaTeX, assuming it would be easier to use (in the long run!) compared to a standard text editor like Pages or Word. Pages does not support all of the functions needed for a beautiful dissertation (step up your game, Apple) and I dislike working in Word. Preferably, I would have written my dissertation in Markdown, but that also seems too limited for a dissertation. Hence, LaTeX.&lt;/p&gt;

&lt;p&gt;In the end, I&amp;rsquo;m not sure whether it was worth it. I had to figure out a lot of things, which took me many hours, and the end result was just a whole mixup of packages of which I barely understood what they do. I did not have any experience working in LaTeX so I also took this as an opportunity to figure out whether I like it. My conclusion: I do not. There does not seem to be any kind of vision behind the structure underlying LaTeX, as seen in the need for a package for almost every single feature you would like to see in a text document. Unfortunately, it&amp;rsquo;s probably the only workable tool at the moment for a complex document like a dissertation.&lt;/p&gt;

&lt;p&gt;Perhaps, then, having a suitable template might do the trick, so I present you with mine. You can find a PDF example of the template &lt;a href=&#34;/../../misc/dissertation_template.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It has the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standard pages for a dissertation (e.g., supervisor/assessment committee page)&lt;/li&gt;
&lt;li&gt;Table of contents&lt;/li&gt;
&lt;li&gt;Two page structure with footers and headers (see example)&lt;/li&gt;
&lt;li&gt;Figures&lt;/li&gt;
&lt;li&gt;Bibliography support with in-text references that link to the reference in the References section AND with page numbers in the References section to link back to the page where the reference was found&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can download the LaTeX template &lt;a href=&#34;/../../misc/dissertation_template.zip&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Introducing tidystats</title>
        <link>/posts/introducing-tidystats/</link>
        <pubDate>Sat, 14 Oct 2017 00:00:00 +0000</pubDate>
        <author> (Willem Sleegers)</author>
        <guid>/posts/introducing-tidystats/</guid>
        <description>&lt;p&gt;I am very excited to announce my first ever R package, called &lt;code&gt;tidystats&lt;/code&gt;. Its function is to create a single text file containing the output of statistical models. This will enable researchers to store the results of their analyses not just in their manuscripts, but also in an organized file separate from their manuscript that they can freely share with anyone. In this blog post I will go into why I think it is useful to do this and how &lt;code&gt;tidystats&lt;/code&gt; works conceptually. For a tutorial I refer to the &lt;a href=&#34;https://github.com/WillemSleegers/tidystats&#34;&gt;README&lt;/a&gt; on Github and a future blog post.&lt;/p&gt;
&lt;div id=&#34;pdf-prisons&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;PDF prisons&lt;/h3&gt;
&lt;p&gt;The standard workflow of an academic researcher is to form hypotheses based on theory, collect data, analyse the results, and present these results in a manuscript. These results are very important. Not only are they used to test hypotheses, but they can also be used to check whether mistakes were made and to conduct meta-analyses. Checking for mistakes and summarizing results, as done with meta-analytic techniques, is vital for good science. We therefore want the data to be easily accessible. Unfortunately, this is often not the case. The output of statistical analyses is usually only found in the PDF file that is the researcher’s manuscript.&lt;/p&gt;
&lt;p&gt;Extracting data from PDFs using software is a possible solution, although it remains challenging. This is partly due to the file format itself. Sometimes a PDF is nothing but an image file, making it very difficult to extract text. In most cases, though, it’s because researchers flexibly report the results of their analyses (and rightly so). There are specific style guides (e.g., &lt;a href=&#34;http://www.apastyle.org&#34;&gt;APA&lt;/a&gt;) that determine how the output of certain analyses should be reported, but this is not sufficiently structured to make parsing PDF files easy. For example, a researcher may decide to report the results in the text, in a table, or in a graph. Or perhaps the researcher summarizes the results (e.g., all &lt;em&gt;Fs&lt;/em&gt; &amp;lt; 1), even though the separate results would be useful to the reader. This makes it either difficult, time-consuming, or impossible to get the required statistics.&lt;/p&gt;
&lt;p&gt;Thankfully, the difficulty of extracting text from PDFs hasn’t stopped some people from developing software tools to do this. For example, &lt;a href=&#34;http://statcheck.io&#34;&gt;statcheck&lt;/a&gt; is an R package to extract statistics from a PDF to see whether the results are consistent. In other words, it is a statistics spellchecker that can prevent the researcher from reporting incorrect statistics caused by mistyping or copy-paste errors (easy mistakes to make while writing up the results). There is also the &lt;a href=&#34;https://github.com/ropensci/tabulizer&#34;&gt;tabulizer&lt;/a&gt; package to extract results from tables in PDFs and there’s &lt;a href=&#34;https://arxiv.org/abs/1709.02261&#34;&gt;software&lt;/a&gt; to extract data from figures. However, each of these are not foolproof and require manual checking to see whether everything performed well.&lt;/p&gt;
&lt;p&gt;Another potential solution is to re-run the analyses yourself. Researchers are increasingly motivated to share the data and the scripts that were used to prepare and analyze the data. However, even though this is a great development, it is incredibly time-intensive to download other researcher’s data (which may be very large) and execute their scripts (which may not always be very well organized). Instead, I believe it is more fruitful for researchers to add an extra step in between their data analysis and manuscript preparation.&lt;/p&gt;
&lt;p&gt;I believe researchers should take all of the output of their statistical tests and put them together in a single data file. This data file should be organized so that data can easily be parsed.&lt;/p&gt;
&lt;p&gt;This is where &lt;code&gt;tidystats&lt;/code&gt; comes in.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tidystats&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Tidystats&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tidystats&lt;/code&gt; is an R package that enables researchers to create a data file containing the output of statistical analyses. The basic workflow is quite simple. At the start of the data analysis script, an empty list is made that can store the output of statistical tests. Then, whenever a test is run, the output of the test can be added to the list. Once the data analysis stage is complete (and writing up the results begins), the list can be converted to a data frame and saved to a file.&lt;/p&gt;
&lt;p&gt;Organizing the output of statistical tests is not an easy feat because different analyses have different kinds of output. In other words, the collection of statistics resulting from different kinds of analyses is messy. A solution to messy data is to make it &lt;a href=&#34;http://vita.had.co.nz/papers/tidy-data.html&#34;&gt;tidy&lt;/a&gt;. Tidy data sets are easy to manipulate, model, and visualize because they have a specific structure: each variable is a column, each observation is a row, and each type of observational unit is a table. In the context of statistical analyses, relevant variables (e.g., type of analysis, the statistic, the value of the statistic) are columns, each relevant statistic (e.g., a &lt;em&gt;p&lt;/em&gt;-value of .054) is a row, and the statistical analysis is a table.&lt;/p&gt;
&lt;p&gt;To illustrate this, let’s conduct a typical regression analysis:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Run the regression
model &amp;lt;- lm(DV ~ condition, data = data)

# Inspect the output
summary(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Call:
## lm(formula = DV ~ condition, data = data)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -1.0710 -0.4938  0.0685  0.2462  1.3690 
## 
## Coefficients:
##                    Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)          5.0320     0.2202  22.850 9.55e-15 ***
## conditiontreatment  -0.3710     0.3114  -1.191    0.249    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1
## 
## Residual standard error: 0.6964 on 18 degrees of freedom
## Multiple R-squared:  0.07308,    Adjusted R-squared:  0.02158 
## F-statistic: 1.419 on 1 and 18 DF,  p-value: 0.249&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output shows multiple statistics we would like to store. To get these we need to first extract them from the output of &lt;code&gt;summary(model)&lt;/code&gt; and then organize them. Inspired by the &lt;a href=&#34;https://github.com/tidyverse/broom&#34;&gt;&lt;code&gt;broom&lt;/code&gt;&lt;/a&gt; package, &lt;code&gt;tidystats&lt;/code&gt; contains functions to help tidy the output of these models. This consists of extracting the relevant statistics and put them in a format consistent with tidy data principles.&lt;/p&gt;
&lt;p&gt;Applying this to the &lt;code&gt;model&lt;/code&gt; variable, we get:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tidystats::tidy_stats(model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 16 x 5
##    term_nr term               statistic                   value method    
##      &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;              &amp;lt;chr&amp;gt;                       &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;     
##  1    1.00 (Intercept)        b                        5.03e⁺ ⁰ Linear re…
##  2    1.00 (Intercept)        SE                       2.20e⁻ ¹ Linear re…
##  3    1.00 (Intercept)        t                        2.29e⁺ ¹ Linear re…
##  4    1.00 (Intercept)        p                        9.55e⁻¹⁵ Linear re…
##  5    1.00 (Intercept)        df                       1.80e⁺ ¹ Linear re…
##  6    2.00 conditiontreatment b                       -3.71e⁻ ¹ Linear re…
##  7    2.00 conditiontreatment SE                       3.11e⁻ ¹ Linear re…
##  8    2.00 conditiontreatment t                       -1.19e⁺ ⁰ Linear re…
##  9    2.00 conditiontreatment p                        2.49e⁻ ¹ Linear re…
## 10    2.00 conditiontreatment df                       1.80e⁺ ¹ Linear re…
## 11    3.00 (Model)            R squared                7.31e⁻ ² Linear re…
## 12    3.00 (Model)            adjusted R squared       2.16e⁻ ² Linear re…
## 13    3.00 (Model)            F                        1.42e⁺ ⁰ Linear re…
## 14    3.00 (Model)            numerator df             1.00e⁺ ⁰ Linear re…
## 15    3.00 (Model)            denominator df           1.80e⁺ ¹ Linear re…
## 16    3.00 (Model)            p                        2.49e⁻ ¹ Linear re…&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we see that the output is now organized in such a way that each column is a relevant variable, each row is a statistic, and the entire output is a table containing important statistics of the regression analysis. This allows us to then combine the output of &lt;em&gt;multiple&lt;/em&gt; statistical tests.&lt;/p&gt;
&lt;p&gt;However, before adding multiple results together, it might be useful to add additional information.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-researcher-information&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Adding researcher information&lt;/h3&gt;
&lt;p&gt;Besides organizing the output of statistical tests, I also think researchers can add valuable information to specific tests. For example, when you want to perform a meta-analysis such as a p-curve analysis, you should not add all of the statistical results that you can find in the manuscript. Instead, only the results that belong to the effect of interest are relevant. Additional tests such as manipulation checks are not. It is easy to select statistics that do not belong to the effect of interest, as can be seen in this Data Colada &lt;a href=&#34;http://datacolada.org/60&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Something that may help make this easier is for the original authors to indicate what they consider to be the crucial tests.&lt;/p&gt;
&lt;p&gt;Additionally, it may be fruitful for researchers to also indicate which analyses were confirmatory and which were exploratory. For example, there is currently a debate about whether the alpha of .05 should be lowered to .005, see &lt;a href=&#34;https://psyarxiv.com/mky9j/&#34;&gt;here&lt;/a&gt;, &lt;a href=&#34;https://psyarxiv.com/9s3y6&#34;&gt;here&lt;/a&gt;, and &lt;a href=&#34;https://arxiv.org/abs/1709.07588&#34;&gt;here&lt;/a&gt;. Yet, the ‘correct’ alpha depends in part on whether an analysis is confirmatory or exploratory, so it may be fruitful for researchers to indicate whether the analysis was part of the pre-registration or not.&lt;/p&gt;
&lt;p&gt;To this end, &lt;code&gt;tidystats&lt;/code&gt; uses the &lt;code&gt;add_stats()&lt;/code&gt; function. This function tidies the output of a statistical test (as shown before) and allows researchers to add additional information, such as what type of test it is (e.g., hypothesis test, manipulation test) and whether the analysis is confirmatory or exploratory.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;additional-benefits&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Additional benefits&lt;/h3&gt;
&lt;p&gt;I am making the case for researchers to add an additional step their workflow: to create an organized file containing the statistical output of the tests, together with additional researcher-supplied information. I realize that arguing for already-way-too-busy researchers to do extra work is not a particularly winning strategy. Of course I hope that my prior arguments are convincing in that this extra step will greatly boost the ease with which we can perform meta-analytic research, but if you are not interested in doing meta-analytic research, these arguments may be less persuasive. Thankfully, there are additional benefits to creating an organized data file.&lt;/p&gt;
&lt;p&gt;If you have an organized data file of statistical output, you can use this file to easily report the output in your manuscript. Using &lt;a href=&#34;http://rmarkdown.rstudio.com&#34;&gt;R Markdown&lt;/a&gt; it is possible to combine code together with text in order to write a results section. Some packages already exist to make this possible (e.g., &lt;a href=&#34;https://github.com/crsh/papaja&#34;&gt;papaja&lt;/a&gt;). Having an organized data file of statistics makes reporting the output of a statistical analysis as easy as saying ‘report results of analysis X’. In fact, &lt;code&gt;tidystats()&lt;/code&gt; currently supports exactly this for t-tests, correlations, regression, and ANOVAs. You can check out the &lt;a href=&#34;https://github.com/WillemSleegers/tidystats&#34;&gt;README&lt;/a&gt; to see some examples of how this works. This not only makes it easy to report statistics, it also prevents mistakes due to typos and copy-paste errors, which are surprisingly common (see for example &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5101263/&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;So, organizing a data file of statistics output is not just beneficial for conducting meta-research, it is also beneficial for individual researchers working on their manuscript.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;In this blog post I have tried to make the case for an extra step in the researcher’s workflow, and how &lt;code&gt;tidystats&lt;/code&gt; can be used to achieve this. My main goal is to convince you of the benefits of the former, and not necessarily of the benefits of the latter. I simply believe it is useful for researchers to organize the output of their statistical tests, rather than put them in PDF prisons. You do not need &lt;code&gt;tidystats&lt;/code&gt; to do this. You could even create your own technique for doing so. Nevertheless, I hope that &lt;code&gt;tidystats&lt;/code&gt; adds some value for researchers who often have to analyze data and share their results. I will continue to work on &lt;code&gt;tidystats&lt;/code&gt; to add support for even more statistical functions and even more reporting functions. If you want to help contribute to the package, you can do so &lt;a href=&#34;https://github.com/WillemSleegers/tidystats&#34;&gt;here&lt;/a&gt;. I also appreciate any feedback, so feel free to share your thoughts.&lt;/p&gt;
&lt;/div&gt;
</description>
      </item>
      
    
      
      <item>
        <title>TIBER 2017: oTree for social scientists</title>
        <link>/talks/tiber_2017/</link>
        <pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate>
        <author> (Willem Sleegers)</author>
        <guid>/talks/tiber_2017/</guid>
        <description>&lt;div id=&#34;tiber-2017-talk&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;TIBER 2017 talk&lt;/h1&gt;
&lt;p&gt;At TIBER 2017 I gave a talk about &lt;a href=&#34;https://www.otree.com&#34;&gt;oTree&lt;/a&gt;, an open-source platform for conducting web, field, and lab experiments. Below you can find a link to this talk, as well as something resembling a transcript of the talk (I like writing out what I’m going to say for a talk).&lt;/p&gt;
&lt;p&gt;My talk was mostly a demonstration of oTree, so it contains links to oTree experiments. Unfortunately I cannot promise that these links will always remain active, so check it out while you can!&lt;/p&gt;
&lt;div id=&#34;view-slides&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;&lt;a href=&#34;tiber_2017_talk.html&#34;&gt;View slides&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;transcript&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Transcript&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Slide 1:&lt;/strong&gt; Welcome everyone. I’m going to give a bit of a different talk. I’m not going to talk about theories or data. Instead, my talk is more of a demonstration. Specifically, a demonstration of oTree.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 2:&lt;/strong&gt; oTree is an open-source platform for conducting lab, web, and field experiments. It’s software to both create and administer experiments, like Qualtrics or Inquisit.&lt;/p&gt;
&lt;p&gt;The point of this presentation is to introduce this platform, demonstrate it, and explain why it might be a useful platform for you.&lt;/p&gt;
&lt;p&gt;Now, I’m probably going to sound like an oTree spokesperson, but I am in no way affiliated with them; I’m merely a user. I’m simply very excited about oTree and the reason is that I think that oTree addresses certain challenges we face as social scientists.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 3:&lt;/strong&gt; The first I want to mention is that a lot of our theories rely on social interaction. Think of trust decisions, social exclusion, bargaining, coalition formation, etc. Unfortunately, doing interaction research is quite difficult. You need to code an interactive study and invite groups of people into your lab, and hope they show. This is difficult and effortful work, which is probably also a reason why, at least in social psychology, we tend to investigate interaction a bit differently. We either use deception to make the participant think they are interacting with another person, while in fact they are not. Or we use such tricks such as telling people that they will play with computers but the responses of that computer is based on real behavior from prior participants. Anyway, these are creative solutions to the issue that doing true interaction research is hard.&lt;/p&gt;
&lt;p&gt;Which brings me sort of to the second challenge, which is that we’re creative folk. We do many different kinds of experimental studies. There are dozens of economic games that tap into different psychological constructs, such as for example the prisoner’s dilemma or public goods games. We also use a variety of measures, such as self-report, reaction speeds, mouse tracking, etc. So we do a lot of different types of research.&lt;/p&gt;
&lt;p&gt;The final challenge I want to mention is probably the most important one, and that’s sample size. Lately it’s been made clear that larger sample sizes are better, and in some cases desperately needed. I’m hopeful that many researchers see the need for this, but it’s of course easier said than done. We need the opportunity to actually recruit more participants.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 4:&lt;/strong&gt; In response to these challenges, we are in the process of setting up a new lab in our department, called EXPLORE. Explore stands for Experimental Psychology Lab for Online Research and, as this name hopefully conveys, its focus is to conduct experiments online.&lt;/p&gt;
&lt;p&gt;We managed to get a startup grant to get this lab off the ground, …and, I suppose, into the cloud.&lt;/p&gt;
&lt;p&gt;The team consists of Ilja, Tony, me, Bastian, and Joeri, and together we decided to use oTree to actually pull this of. So in the next few slides I want to talk about what oTree is, how it works, and show you the features it has that made us decide on using this platform to address the challenges we face as social scientists.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 5:&lt;/strong&gt; Let’s begin with some background information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 6:&lt;/strong&gt; oTree started in 2013, from Daniel Chen’s group at the Swiss Federal Institute of Technology in Zurich. It is funded by Chen’s ERC grant. And it is a homage to z-Tree, which you may know, I don’t, as an application to run interaction studies offline.&lt;/p&gt;
&lt;p&gt;They have a published paper, which you can read to get a more extensive background and a bit of the philosophy behind oTree. You also have to cite this paper if you use their work for yours.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 7:&lt;/strong&gt; oTree can be used to create controlled behavioral experiments like you see in economics, psychology, and related fields. This included multiplayer games such as the prisoner’s dilemma and the public goods game, but also simple surveys and quizzes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 8:&lt;/strong&gt; In very broad terms, oTree works as follows. You code your experiment. This is mostly done in Python and Django. Python is a high level general-purpose programming language. High level actually means it’s quite easy to use, and in the case of oTree it serves as the underlying mechanics of your study. So if you want to randomize conditions or something like that, you would code that in Python. Django is a web framework, which makes it possible that oTree can actually run online. You use this mostly to access variables that you’ve created using Python and display them to the participant.&lt;/p&gt;
&lt;p&gt;Once you’ve coded it, you put oTree and your experiment on a server. This can be any server you rent, or probably your university’s.&lt;/p&gt;
&lt;p&gt;Then you simply have to give a link to participants, and you can watch the data come in. Literally.&lt;/p&gt;
&lt;p&gt;I say literally because it’s actually a feature of oTree to watch the progress of your studies in real-time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 9:&lt;/strong&gt; And it’s the features of oTree that I want to discuss next. There are a lot of them, so I’ll briefly mention a few, and go a bit more in depth about some others.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 10:&lt;/strong&gt; First, and this may be very appealing to some, it’s free. This I find generally worrisome because platforms tend not to be sustainable when they’re free, but in this case it’s not too bad because there are few costs associated with oTree. In fact, the only thing that really costs money is renting the server, which you have to pay for yourself, or the university, so you can rely on oTree sticking around for a while.&lt;/p&gt;
&lt;p&gt;Next, it’s open-source. This means the code is fully transparent, you can see how everything works, if you were so inclined, and it means that it’s also completely extensible. If you want to change something, you can. Personally, however, I think most of us aren’t programmers, so we’re not going to do that. But it’s still a nice sentiment! It also means that those who are programmers can work on this project as well and make it better.&lt;/p&gt;
&lt;p&gt;The third feature is that’s it beautiful. I just want to mention that it’s pretty. Without a lot of work it already looks good.&lt;/p&gt;
&lt;p&gt;Next is that oTree comes with an admin pane to manage your experiments. This I can best directly show you.&lt;/p&gt;
&lt;p&gt;So here you see a list of demo studies that are actually also full fledged studies you can run. oTree comes with more than 20 sample games, but most of what you see here are studies we made. We could click on one to demo it, but instead let’s make an actual session. You do that by going to Session, and there you see that some sessions are already in place, which I put there in preparation of this talk. But let’s make a new one. We select one of the studies we created, and select how many participants we want. We then create it, after which we see the links we can give to our participants. There’s 1 session wide link, which is probably the one you want since anyone who clicks on that link gets assigned a slot and can participate in the study. There are also individual links, but these are less useful, unless you have specific roles for specific participants.&lt;/p&gt;
&lt;p&gt;I clicked on the session wide link and you see the first question. Let me just answer all of these questions very quickly. -Answer questions- And here we see how well we did. I nailed it. Then it says finished. Normally you would have this link to a page, like an Mturk code or instructions to go to the test leader. Let’s go back to the slides.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 11:&lt;/strong&gt; I can tell you oTree also works on any device, such as a phone or tablet.&lt;/p&gt;
&lt;p&gt;Another feature, which I already briefly mentioned, is that you can monitor the studies in real time.&lt;/p&gt;
&lt;p&gt;I can show this too, because let’s take my iPad and do the same study there as well. Before I do, I’ll go to the Monitor page in the Admin Pane, to wait for my next participant. Then, when on my iPad I tap on the link, I can see that I’ve take up a slot in the study. Like I said before, you can actually also see the data come in, because if you go to the Data page, there you will see all the data collected so far, and the new data that is coming in. Let me show you that by answering some questions. As you see, when a new response is recorded, the cell lights up green.&lt;/p&gt;
&lt;p&gt;Mostly this is not super useful, because if you coded everything right, you don’t need to keep track of it. But 1) it’s a lot of fun, and 2) if you have a somewhat more complicated design, with interactions, then you do want to keep track of things. Which brings me to the next feature.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 12:&lt;/strong&gt; I want to talk about 3 key features next, because these next features address the challenges that I previously mentioned.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 13:&lt;/strong&gt; The first is interaction. oTree enables true interactive studies between participants. This works by having participants go through a sequence of pages, until they get to a waiting page. There they have to wait for all other participants in their group to get there too, and then the study continues. Let me show you this with an example.&lt;/p&gt;
&lt;p&gt;Let’s do a Trust Game. We begin with some instructions, and then I have to decide. How many points do I want to give. I’m nice, so I’m gonna give 100. Now I have to wait.&lt;/p&gt;
&lt;p&gt;So here on my iPad I’m player 2, and I get to give somewhere between 0 and 300 points. I’m a jackass, so I’m going to give 0.&lt;/p&gt;
&lt;p&gt;And here we see the results. 0 points. In the words of one of our participants that also participated in a trust game and didn’t get any money: Well that sucks.&lt;/p&gt;
&lt;p&gt;So here we had a true interactive experiment. There were two people, who were actually in interaction with each other. It’s done in a manner of wait pages, where all participants gather so that the responses are collected, and then something is done with the responses. This could be part of a trust game, where it’s 1 one 1, but it could also be with larger groups, such as a coalition formation game or whatnot. Technically you could have up to a 100 or so people grouped together.&lt;/p&gt;
&lt;p&gt;This addresses the first challenge: the need for interactive tasks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 14:&lt;/strong&gt; The next feature addresses the second challenge: a need for flexible experimental designs. Like I said before, oTree is open source, so it’s completely under your control and you can extend it in any way you want. However, this is quite hard to do, so I’m actually not expecting a lot of people to do that. Fortunately, there are several other ways to extend the functionality. For example, you can use Javascript libraries to add functionality to your study. In our lab we already created a few tasks that can be useful in experimental design. I’ve listed a few examples here, such as a mouse tracking task, a venn task (which is a name I made up for a task in which you drag and resize circles to indicate how much overlap you see between the concepts described in the circles), or you can use charts to visualize data, also to participants, and there’s webcam support. Let me demonstrate one of these. Like… let’s do mouse tracking.&lt;/p&gt;
&lt;p&gt;The task here is to categorize pictures by indicating whether you see a woman or a man. You then see the results of your mouse movements. These can be used to see how easy it was for someone to categorize the stimulus. You instantly see the results, which I added for demo purposes, because it shows the results of the mouse tracking, and it demos the use of charts.&lt;/p&gt;
&lt;p&gt;Maybe another example, like the webcam one. I’ve gotten this to work on Chrome, not Safari. So this is a nice example of a limitation that you should discover while testing. This is just a demo of webcam functionality, not a real task, but this could be used to investigate self presentation, perhaps in a dating setting. In fact, that’s how we are planning on using it.&lt;/p&gt;
&lt;p&gt;So, as you can see, we already added a few relatively complex tasks to oTree, thus demonstrating that it can be used in flexible ways, and letting us scientists do what we do best: creating cool studies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 15:&lt;/strong&gt; The final feature I want to talk about is what should be clear by now, and that’s that oTree works online. So all of the tasks I showed were done online, including the complex ones. This enables us to run them on MTurk, or any other recruitment platform, so that we can get the participants we need. In fact, oTree has Mturk support built in, so it’s actually even easier to run online studies. Admittedly, we haven’t made use of this yet. We have simply provided Mturkers with a link, just like you would do with Qualtrics or so. But it’s possible!&lt;/p&gt;
&lt;p&gt;Regarding examples, Bastian’s presentation was based on a study we did via oTree. You may recall that that wasn’t an interactive study, but it was a study that consisted of over a 1000 photos, which we did not want to upload to Qualtrics manually, because that would be effortful and effort is the worst, but also because we probably would have made some mistakes, linking the wrong URLs to the wrong host_ids, or other errors like that. Using oTree, we could simply load in a list of file names linking to the photo’s and the host_id, and code the logic needed to present the right participants with the right set of photos.&lt;/p&gt;
&lt;p&gt;If time permits, I can also demonstrate another cool study we did. This one is interactive, and consists of a participant filling in a personality questionnaire, which is then shown to the participant they are partnered up with. So, each participants sees the personality scores of the other participants, and then they play a trust game. That way we can test what aspects of someone’s personality is used to form trustworthiness impressions.&lt;/p&gt;
&lt;p&gt;I can quickly show you how that worked. I fill in some scores. And then I see the results. First my own, so that the participant gets to understand what each score means, and then that of the other participant, while deciding whether to trust that person or not. On this page you can also hover over the bars to see what they mean again, and we actually record also this behavior. When the participants make a decision, they fill in another few questions, wait again, and then they see the results. Like I said, I’m not going to talk about data here, so if you’re interested in this, go talk to Tony!&lt;/p&gt;
&lt;p&gt;So, this last feature, that we can run all these studies online, is very powerful. This enables us to run complex, interactive studies online, on platforms such as MTurk, or anywhere else with an internet connection. Although technically you don’t need an internet connection, you just need a server, which could be a laptop, so you could also do this in the field. Either way, with this design it’s possible to gather more data, thus addressing our need for larger sample sizes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 16:&lt;/strong&gt; After all this positive talk, it’s time for some limitations. When it comes to interactions, dropout becomes a significant problem. There is not an elegant way to deal with that. If a participant drops out, like in the personality study, then the participant he or she is partnered with is also out. There are some potential technical solutions to this, like providing a link to the still remaining participant to re-start the experiment, but usually this means the participant has to go through everything again, and spend a longer time doing your study.&lt;/p&gt;
&lt;p&gt;We have done a few studies online now, and although there is some dropout, it’s not dramatic, I think it’s around 5% or so.&lt;/p&gt;
&lt;p&gt;When you do online research, you have to be mindful of different screen sizes. So, you have to code your experiments in such a way that it allows for a variety of screen sizes. You can do this by making responsive designs. oTree uses Twitter’s bootstrap functionality, which means many of the default things you can do in oTree will resize well. It also works quite well on tablets because everything is touch supported. However, there are exceptions. For example, the mouse tracking task does not work on small screens, and of course, only with a mouse. Finally, a downside is that you need to learn more programming than you may be used to.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 17:&lt;/strong&gt; Actually, there’s a set of skills required for this, but it’s not too bad. I think anyone can learn this. I’ve provided a list of required skills here, and some links to places where you can learn them. In most cases, you don’t need to learn everything. You simply need to learn enough to get by. Also, if you master the art of Google, you’ll get a looong way.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Slide 18:&lt;/strong&gt; In conclusion, oTree is a very well-designed platform that can be used to address at least three key challenges faced by social scientists: the use true interactions between participants, flexible experimental designs, and running online studies to acquire large samples sizes.&lt;/p&gt;
&lt;p&gt;Thank you for your attention.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Creating a trial-based time variable</title>
        <link>/posts/creating-a-trial-based-time-variable/</link>
        <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
        <author> (Willem Sleegers)</author>
        <guid>/posts/creating-a-trial-based-time-variable/</guid>
        <description>&lt;p&gt;One of the first issues I ran into when starting to analyze eye tracker data was that the raw data does not contain a trial-based time variable. I expected that the timestamp variable would be a variable that starts at 0 when a trial begins and that it would keep adding up at a rate equal to the sampling frequency, until the end of the trial. Instead, you are likely to get a timestamp variable that looks like a random set of numbers, as shown here:&lt;/p&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-1&#34;&gt;Table 1: &lt;/span&gt;Example data&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;subject&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;timestamp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;trial&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;pupil&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212275472&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.732900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212292222&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.742935&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212308845&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.739175&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212325470&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.759690&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212342094&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.753800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212358844&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.755915&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212375469&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.770130&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212392094&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.760900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212408718&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.767435&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212425344&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.755015&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;strong&gt;timestamp&lt;/strong&gt; variable actually reflects the internal clock of the hardware used to get the data. This means that each measurement recording has a specific clock time associated with it, rather than a time stamp related to an event in the experiment.&lt;/p&gt;
&lt;p&gt;Fortunately, it’s relatively easy to turn this variable into a more useful variable. What we want is a variable, say &lt;strong&gt;time&lt;/strong&gt;, that starts at 0 when a trial begins. The subsequent measures, in the same trial, should then be timed relative to the start of the trial. We want this for every trial.&lt;/p&gt;
&lt;p&gt;The required steps to get this variable are as follows:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;For each trial, get the minimum of the &lt;strong&gt;timestamp&lt;/strong&gt; variable (e.g., 212275472 in trial 1)&lt;/li&gt;
&lt;li&gt;Repeat this value across the entire trial&lt;/li&gt;
&lt;li&gt;Subtract this value from the &lt;strong&gt;timestamp&lt;/strong&gt; variable&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In R, this would look like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Create a trial-based time variable
data %&amp;gt;%
    group_by(subject, trial) %&amp;gt;%
    mutate(time = timestamp - min(timestamp)) -&amp;gt; data

# Divide by a 1000 to have the variable denote milliseconds rather than microseconds
data$time &amp;lt;- data$time / 1000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We take our data frame, group the data by &lt;strong&gt;subject&lt;/strong&gt; and &lt;strong&gt;trial&lt;/strong&gt; (because we want the minimum for each individual trial), and create a new variable called &lt;strong&gt;time&lt;/strong&gt; that is equal to the value in &lt;strong&gt;timestamp&lt;/strong&gt; minus the minimum of the timestamp for that trial. Additionally, we divide the result by a 1000 because the internal clock is in microseconds, and I prefer milliseconds. The result is this:&lt;/p&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 2: &lt;/span&gt;Example data with time variable&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;right&#34;&gt;subject&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;timestamp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;trial&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;pupil&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;time&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212275472&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.732900&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212292222&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.742935&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.750&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212308845&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.739175&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33.373&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212325470&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.759690&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.998&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212342094&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.753800&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;66.622&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212358844&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.755915&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212375469&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.770130&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.625&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212392094&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.760900&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33.250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212408718&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.767435&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.874&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;212425344&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.755015&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;66.500&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We see that our new variable time indeed starts at 0, adds up until the next trial, where it starts at 0 again. Excellent!&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Importing multiple data files</title>
        <link>/posts/importing-multiple-data-files/</link>
        <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
        <author> (Willem Sleegers)</author>
        <guid>/posts/importing-multiple-data-files/</guid>
        <description>&lt;p&gt;Combining multiple data files is a regular problem for certain researchers, including myself. In my eye tracker research I collect data for each participant separately. This means that when I want to start preparing my data, I first need to combine the data into one large data frame.&lt;/p&gt;
&lt;p&gt;There are many ways to combine separate data files in R. You can read in each file separately and store the result in their own data frame, after which you merge them together. Depending on the number of files, this might be feasible. In cases where you have many files, this is not. You can also create a &lt;code&gt;for&lt;/code&gt; loop to loop across all the files and merge the data of each file into one data frame. This is an attractive solution, but R is not really made for &lt;code&gt;for&lt;/code&gt; loops. Instead, functions such as &lt;code&gt;lapply()&lt;/code&gt; can be used.&lt;/p&gt;
&lt;p&gt;But I recently discovered a better &lt;a href=&#34;https://github.com/STAT545-UBC/Discussion/issues/398&#34;&gt;way&lt;/a&gt; that also fits nicely in my preferred usage of R: the &lt;a href=&#34;http://tidyverse.org&#34;&gt;tidyverse&lt;/a&gt;. Using the &lt;code&gt;tidyverse&lt;/code&gt; package, you can read in multiple data files like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Read in all files in the current working directory and store the result in &amp;#39;data&amp;#39;
list.files() %&amp;gt;%
    map_df(read_tsv) -&amp;gt; data&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;list.files()&lt;/code&gt; returns a vector containing the file names of the files in your current working directory. This vector is piped into &lt;code&gt;map_df()&lt;/code&gt; with the pipe operator, &lt;code&gt;%&amp;gt;%&lt;/code&gt;. &lt;code&gt;map_df()&lt;/code&gt; loops over each of these files, reads in the data with the supplied function (in this case &lt;code&gt;read_tsv()&lt;/code&gt;), and automatically combines the results into one data frame, which I store in a variable called &lt;code&gt;data&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This code works if you are already in the correct working directory. If you do not want to set the working directory, you can add the &lt;code&gt;path&lt;/code&gt; argument to &lt;code&gt;list.files()&lt;/code&gt; and also set &lt;code&gt;full.names&lt;/code&gt; to &lt;strong&gt;TRUE&lt;/strong&gt;. This latter argument will make &lt;code&gt;list.files()&lt;/code&gt; return the paths to the files you want to read in, rather than just the file names, which is needed for the function to import the data into R.&lt;/p&gt;
&lt;p&gt;This is my new favorite way of reading in multiple data files.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>First post</title>
        <link>/posts/2017-05-25-first-post/</link>
        <pubDate>Thu, 25 May 2017 00:00:00 +0000</pubDate>
        <author> (Willem Sleegers)</author>
        <guid>/posts/2017-05-25-first-post/</guid>
        <description>&lt;p&gt;This is the first post of my new website, created with the amazing &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;blogdown&lt;/a&gt;. Blogdown uses &lt;a href=&#34;https://cran.r-project.org&#34;&gt;R&lt;/a&gt; and &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; to create a website with blogging functionality. There are various themes to choose from, and this website uses a customized version of the &lt;a href=&#34;https://github.com/jnjosh/internet-weblog&#34;&gt;internet-weblog theme&lt;/a&gt;. If you&amp;rsquo;re interested in the code for this website, let me know!&lt;/p&gt;
</description>
      </item>
      
    
      
    
      
    
      
    
  </channel>
</rss>
